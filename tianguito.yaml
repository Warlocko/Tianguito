AWSTemplateFormatVersion: "2010-09-09"

Description: "Levantar una VPC"
Parameters:
  VPCName:
    Description: "Nombre de la VPC"
    Type: String
  VPCRange:
    Description: "Rango de la VPC"
    Type: String

Resources:
  TianguitoVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCRange
      EnableDnsHostnames: "true"
      EnableDnsSupport: "true"
      Tags:
        - Key: "Application"
          Value:
            Ref: "AWS::StackName"
        - Key: "Name"
          Value:
            Ref: VPCName

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: "us-east-1a"
      CidrBlock: "10.0.0.0/24"
      VpcId:
        Ref: TianguitoVPC
      Tags:
        - Key: "Name"
          Value: Tianguito-Pub-1
          
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: "us-east-1b"
      CidrBlock: "10.0.1.0/24"
      VpcId:
        Ref: TianguitoVPC
      Tags:
        - Key: "Name"
          Value: Tianguito-Pub-2

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: "us-east-1a"
      CidrBlock: "10.0.2.0/24"
      VpcId:
        Ref: TianguitoVPC
      Tags:
        - Key: "Name"
          Value: Tianguito-Priv-1
          
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: "us-east-1b"
      CidrBlock: "10.0.3.0/24"
      VpcId:
        Ref: TianguitoVPC
      Tags:
        - Key: "Name"
          Value: Tianguito-Priv-2
  
  RoutingTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: "Name"
          Value: Tianguito_Route_Table
      VpcId:
        Ref: TianguitoVPC

  TianguitoGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
        - Key: "Name"
          Value: Tianguito-Gateway
  
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref TianguitoGateway
      VpcId: !Ref TianguitoVPC
  
  AssociationPub1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RoutingTable
      SubnetId: !Ref PublicSubnet1
  
  AssociationPub2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RoutingTable
      SubnetId: !Ref PublicSubnet2

  AssociationPriv1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RoutingTable
      SubnetId: !Ref PrivateSubnet1

  AssociationPriv2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RoutingTable
      SubnetId: !Ref PrivateSubnet2

  TianguitoACL1:
    Type: AWS::EC2::NetworkAcl
    Properties:
      Tags: 
        - Key: "Name"
          Value: TianguitoACL1
      VpcId: !Ref TianguitoVPC

  ACLEntryHTTP:
    Type: AWS::EC2::NetworkAclEntry
    Properties: 
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref TianguitoACL1
      PortRange:
        From: 80
        To: 80
      Protocol: 6
      RuleAction: "allow"
      RuleNumber: 100
  
  ACLEntryHTTPS:
    Type: AWS::EC2::NetworkAclEntry
    Properties: 
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref TianguitoACL1
      PortRange:
        From: 443
        To: 443
      Protocol: 6
      RuleAction: "allow"
      RuleNumber: 110

  ACLEntrySSH:
    Type: AWS::EC2::NetworkAclEntry
    Properties: 
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref TianguitoACL1
      PortRange:
        From: 22
        To: 22
      Protocol: 6
      RuleAction: "allow"
      RuleNumber: 120
    
  ACLEntryRDP:
    Type: AWS::EC2::NetworkAclEntry
    Properties: 
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref TianguitoACL1
      PortRange:
        From: 3389
        To: 3389
      Protocol: 6
      RuleAction: "allow"
      RuleNumber: 130
  
  ACLEntryDNSUDP:
    Type: AWS::EC2::NetworkAclEntry
    Properties: 
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref TianguitoACL1
      PortRange:
        From: 53
        To: 53
      Protocol: 17
      RuleAction: "allow"
      RuleNumber: 140

  ACLEntryDNSUDPTCP:
    Type: AWS::EC2::NetworkAclEntry
    Properties: 
      CidrBlock: 0.0.0.0/0
      NetworkAclId: !Ref TianguitoACL1
      PortRange:
        From: 53
        To: 53
      Protocol: 6
      RuleAction: "allow"
      RuleNumber: 150

  ACLAssociation1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties: 
      NetworkAclId: !Ref TianguitoACL1
      SubnetId: !Ref PublicSubnet1

  ACLAssociation2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties: 
      NetworkAclId: !Ref TianguitoACL1
      SubnetId: !Ref PublicSubnet2

  ACLAssociation3:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties: 
      NetworkAclId: !Ref TianguitoACL1
      SubnetId: !Ref PrivateSubnet1
  
  ACLAssociation4:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties: 
      NetworkAclId: !Ref TianguitoACL1
      SubnetId: !Ref PrivateSubnet2

  TianguitoSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Tianguito security group 
      Tags: 
        - Key: "Name"
          Value: TianguitoSG
      VpcId: !Ref TianguitoVPC

  SecurityGroupIngress1:
      Type: AWS::EC2::SecurityGroupIngress
      Properties: 
        CidrIp: 0.0.0.0/0
        FromPort: 8111
        GroupId: !Ref TianguitoSG
        IpProtocol: tcp
        ToPort: 8111

  SecurityGroupIngress2:
      Type: AWS::EC2::SecurityGroupIngress
      Properties: 
        CidrIp: 0.0.0.0/0
        FromPort: 443
        GroupId: !Ref TianguitoSG
        IpProtocol: tcp
        ToPort: 443

  SecurityGroupIngress3:
      Type: AWS::EC2::SecurityGroupIngress
      Properties: 
        CidrIp: 0.0.0.0/0
        FromPort: 80
        GroupId: !Ref TianguitoSG
        IpProtocol: tcp
        ToPort: 80

  SecurityGroupIngress4:
      Type: AWS::EC2::SecurityGroupIngress
      Properties: 
        CidrIp: 0.0.0.0/0
        FromPort: 22
        GroupId: !Ref TianguitoSG
        IpProtocol: tcp
        ToPort: 22
  
  PublicLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets: 
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      Tags: 
        - Key: "Name"
          Value: Tianguito-Public-Balancer

  PrivateLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      Subnets: 
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      Tags: 
        - Key: "Name"
          Value: Tianguito-Private-Balancer

  StreamPoint1:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      SecurityGroupIds: 
        - !Ref TianguitoSG
      ServiceName: !Sub 'com.amazonaws.us-east-1.kinesis-streams'
      SubnetIds: 
        - !Ref PublicSubnet1
      VpcEndpointType: "Interface"
      VpcId: !Ref TianguitoVPC

  StreamPoint2:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      SecurityGroupIds: 
        - !Ref TianguitoSG
      ServiceName: !Sub 'com.amazonaws.us-east-1.kinesis-streams'
      SubnetIds: 
        - !Ref PublicSubnet2
      VpcEndpointType: "Interface"
      VpcId: !Ref TianguitoVPC
  
  S3Bucket: 
    Type: AWS::S3::Bucket 
    Properties:
      BucketName: tianguito-bucket1
      AccessControl: PublicRead 
      WebsiteConfiguration: 
        IndexDocument: index.html 
        ErrorDocument: error.html 
        RoutingRules: 
        - RoutingRuleCondition: 
            HttpErrorCodeReturnedEquals: '404' 
            KeyPrefixEquals: app/ 
          RedirectRule: 
            HostName: tianguito-bucket.us-east-1.amazonaws.com 
            ReplaceKeyPrefixWith: report-404/
    DeletionPolicy: Retain  
                            
  BucketPolicy: 
    Type: AWS::S3::BucketPolicy 
    Properties:
        Bucket: 
            Ref: "S3Bucket" 
        PolicyDocument: 
            Id: MyPolicy 
            Statement: 
                - 
                    Action: 
                        - 's3:GetObject' 
                    Effect: Allow 
                    Principal: '*'
                    Resource: 
                        Fn::Join: 
                            - ""
                            -    
                                - "arn:aws:s3:::" 
                                - 
                                    Ref: "S3Bucket" 
                                - "/*"
